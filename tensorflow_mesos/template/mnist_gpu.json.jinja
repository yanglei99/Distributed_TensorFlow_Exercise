{%- set name = "mnist-gpu" %}
{%- set image = "yanglei99/tensorflow_job_gpu" %}
{%- set worker_replicas = 3 %}
{%- set ps_replicas = 1 %}
{%- set dns_domain = "marathon.mesos" %}
{%- set port = 2333 %}
{%- set train_dir = "/train_dir/dist_mnist/mnist_gpu_log" %}
{%- set data_dir = "/train_dir/dist_mnist/data" %}
{%- set jobName = "/train_dir/dist_mnist/mnist.py" %}
{%- set tensorboard = true %}
{%- set cpu = 3 %}
{%- set mem = 6144 %}
{%- set gpu = 1 %}
{%- set max_step = 5000 %}

{%- set replicas = {"worker": worker_replicas, "ps": ps_replicas} -%}

{%- macro worker_hosts() -%}
  {%- for i in range(worker_replicas) -%}
    {%- if not loop.first -%},{%- endif -%}
    worker-{{ i }}.{{ name }}.{{ dns_domain }}:{{ port + i }}
  {%- endfor -%}
{%- endmacro -%}

{%- macro ps_hosts() -%}
  {%- for i in range(ps_replicas) -%}
    {%- if not loop.first -%},{%- endif -%}
    ps-{{ i }}.{{ name }}.{{ dns_domain }}:{{ port + worker_replicas + i }}
  {%- endfor -%}
{%- endmacro -%}

{
  "id": "{{ name }}",
  "apps": [
    {%- for job in ["worker", "ps"] -%}
    {%- for i in range(replicas[job]) %}
    {
      "id": "{{ job }}-{{ i }}",
      "container": {
        "type": "MESOS",
    	"network": "HOST",
        "docker": {
          "image": "{{ image }}",
           "forcePullImage": true
        },
		"volumes": [
			      {
			    	  "containerPath": "/train_dir",
			    	  "hostPath": "/shared_data",
			          "mode": "RW"
			      }
		]
      },
      "env": {
      		"TF_JOB_NAME": "{{jobName}}",
      		"TF_JOB_ARGUMENTS": "--max_step {{ max_step }} --worker_hosts {{ worker_hosts() }} --ps_hosts {{ ps_hosts() }} --job_name {{ job }} --task_index {{ i }} --train_dir {{ train_dir }} --data_dir {{ data_dir }}"
      },
      "cpus": {{ cpu }},
      "mem": {{ mem }},
      "gpus": {{ gpu }},
      "instances": 1
    }{%- if not loop.last %},{% endif %}
    {%- endfor %} {%- if job !="ps" %},{% endif %}
    {%- endfor %}
    {%- if tensorboard  %},
    {
      "id": "tensorboard",
      "container": {
        "type": "DOCKER",
        "network": "HOST",
        "docker": {
          "image": "yanglei99/tensorflow_job"
        },
		"volumes": [
			      {
			    	  "containerPath": "/train_dir",
			    	  "hostPath": "/shared_data",
			          "mode": "RW"
			      }
		]
      },
      "acceptedResourceRoles": ["slave_public"],
      "cmd": "tensorboard --logdir {{ train_dir }}",
      "cpus": {{ cpu }},
      "mem": {{ mem }},
      "instances": 1
    }
    {%- endif %}
  ]
}
